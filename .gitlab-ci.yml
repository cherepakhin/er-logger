stages:
  - build artifacts
  - build containers
  - deploy
variables:
  DOCKER_DRIVER: overlay2
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle

# ==========================================================================
# Artifacts
# ==========================================================================

build er-logger jar:
  image: gradle
  stage: build artifacts
  variables:
    GRADLE_BUILD_TASK_NAME: :build
    GRADLE_SQ_TASK_NAME: :sonarqube
    GRADLE_JAR_PATH: $CI_PROJECT_DIR/build/libs/er-logger-*.jar
  script:
    # Use SonarQube only in develop branch
    # because it rewrites all statistics in feature builds (free version of SQ)
    - |
      if [ "$CI_COMMIT_REF_NAME" == "develop" ]; then
        GRADLE_TASK_NAME="${GRADLE_SQ_TASK_NAME} ${GRADLE_BUILD_TASK_NAME}";
      else
        GRADLE_TASK_NAME=${GRADLE_BUILD_TASK_NAME};
      fi
    - gradle $GRADLE_TASK_NAME \
      -Dsonar.projectKey=$CI_PROJECT_NAME \
      -Dsonar.host.url=$SONAR_URL \
      -Dsonar.login=$SONAR_TOKEN
  artifacts:
    expire_in: 1 days
    paths:
      - $GRADLE_JAR_PATH
  cache:
    key: $CI_PROJECT_NAME
    paths:
      - .gradle/caches/
  tags:
    - docker-java

# ==========================================================================
# Containers
# ==========================================================================

build er-logger docker:
  image: docker
  services:
    - docker:dind
  stage: build containers
  variables:
    IMAGE_TAG: $CI_COMMIT_REF_SLUG
    DOCKER_FILE: CI.Dockerfile
    DOCKER_BUILD_CONTEXT: .
  script:
    - export GIT_BRANCH="${CI_COMMIT_REF_NAME}"
    - export GIT_COMMIT="${CI_COMMIT_SHA:0:8}"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --rm -t $CI_REGISTRY_IMAGE:$IMAGE_TAG -f $DOCKER_FILE --build-arg GIT_COMMIT --build-arg GIT_BRANCH $DOCKER_BUILD_CONTEXT
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  tags:
    - docker
  dependencies:
    - build er-logger jar
  only:
    - /^release\/\d+\.\d+\.\d+$/
    - tags

deploy:
  image: quay.io/openshift/origin-cli:4.5
  stage: deploy
  dependencies:
    - build er-logger docker
  script:
    - oc login --token=$OC_TOKEN  https://api.okd.perm.ertelecom.ru:6443 --insecure-skip-tls-verify
    - oc process -f okd.yaml
      -p CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE
      -p CI_COMMIT_REF_SLUG="$CI_COMMIT_REF_SLUG" -o yaml > deploy.yaml
    - cat deploy.yaml
    - oc apply	-f deploy.yaml
  tags:
    - k8s
  only:
    - /^release\/\d+\.\d+\.\d+$/
    - tags
